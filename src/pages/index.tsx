import Head from "next/head";
import { Canvas, useFrame } from '@react-three/fiber'
import { OrbitControls, KeyboardControls } from '@react-three/drei'
import BeutomelloExperience from "~/components/BeutomelloExperience";
import useBeutomelloGame from "~/stores/useBeutomelloGame";
import { useState } from "react";
import * as THREE from 'three'
import Interface from "~/components/Interface";


function CameraReactsToStateChanges() {
  const [smoothedCameraPosition] = useState(() => new THREE.Vector3(-11, 11, 11))
  const cameraPosition = useBeutomelloGame(state => state.cameraPosition)
  useFrame((state, delta) => {
    smoothedCameraPosition.lerp(cameraPosition, 7 * delta)
    state.camera.position.copy(smoothedCameraPosition)
    state.camera.lookAt(0, 0, 0)
  })
  return <></>
}

export default function Home() {
  return (
    <>
      <Head>
        <title>Test 01 - Konchord Synth Wave</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main id="main">
        <KeyboardControls
          map={[
            { name: 'forward', keys: ['ArrowUp', 'KeyW'] },
            { name: 'backward', keys: ['ArrowDown', 'KeyS'] },
            { name: 'leftward', keys: ['ArrowLeft', 'KeyA'] },
            { name: 'rightward', keys: ['ArrowRight', 'KeyD'] },
            { name: 'jump', keys: ['Space'] },
          ]}
        >
          <Canvas
            shadows
            camera={{
              fov: 75,
              near: 0.01,
              far: 200,
            }}
          >
            <CameraReactsToStateChanges />
            {/* <OrbitControls
              // minPolarAngle={Math.PI / 6}
              // minPolarAngle={Math.PI / 2 - Math.PI / 3}
              // maxPolarAngle={Math.PI / 2 - Math.PI / 3}
            /> */}
            <BeutomelloExperience />
          </Canvas>
          <Interface />
        </KeyboardControls>
      </main>
    </>
  );
}